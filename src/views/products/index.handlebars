<h1>Productos</h1>
<p class="muted">Listado con paginación, filtros y orden</p>
<hr />

<div class="row" style="gap:.5rem;align-items:center;margin-bottom:8px">
  <label for="cidInput">Cart ID:</label>
  <input id="cidInput" placeholder="pegá aquí tu CID" style="min-width:320px" />
</div>

<form id="filters" class="row" style="gap:.5rem;align-items:center">
  <input name="query" placeholder="categoría o disponible/no disponible" />
  <select name="sort">
    <option value="">sin orden</option>
    <option value="asc">precio ↑</option>
    <option value="desc">precio ↓</option>
  </select>
  <input name="limit" type="number" min="1" value="10" style="width:90px" />
  <button>Aplicar</button>
</form>

<div id="products-grid" class="grid" style="margin-top:1rem"></div>

<div class="row" style="justify-content:space-between;margin-top:1rem">
  <button id="prev" disabled>« Anterior</button>
  <span id="pageLabel" class="muted"></span>
  <button id="next" disabled>Siguiente »</button>
</div>

<script>
  const grid = document.getElementById('products-grid');
  const form = document.getElementById('filters');
  const prev = document.getElementById('prev');
  const next = document.getElementById('next');
  const pageLabel = document.getElementById('pageLabel');
  const cidInput = document.getElementById('cidInput');

  let state = { page: 1, limit: 10, sort:'', query:'' };

  form.addEventListener('submit', e => {
    e.preventDefault();
    const fd = new FormData(form);
    state.page = 1;
    state.limit = fd.get('limit') || 10;
    state.sort  = fd.get('sort')  || '';
    state.query = fd.get('query') || '';
    load();
  });

  async function load() {
    const qs = new URLSearchParams({ ...state });
    for (const k of Object.keys(state)) if (!state[k]) qs.delete(k);
    const res = await fetch('/api/products?'+qs.toString());
    const data = await res.json();

   grid.innerHTML = '';
    (data.payload || []).forEach(p => {
    const el = document.createElement('div');
    el.className = 'card';
    el.innerHTML = `
        <div class="row" style="justify-content:space-between">
        <strong>
            <a href="/products/${p._id}" style="text-decoration:none; color:inherit">
            ${p.title ?? ''}
            </a>
        </strong>
        </div>
        <div class="row" style="justify-content:space-between;margin-top:8px">
        <span>$ ${p.price ?? ''} · ${p.category ?? ''}</span>
        <button data-pid="${p._id}">Agregar al carrito</button>
        </div>`;
    grid.appendChild(el);
    });


    grid.querySelectorAll('button[data-pid]').forEach(btn => {
      btn.addEventListener('click', async () => {
        const pid = btn.getAttribute('data-pid');
        const cid = cidInput.value.trim();
        if (!cid) return alert('Pegá tu Cart ID primero (abrí /carts/:cid en otra pestaña)');
        const r = await fetch(`/api/carts/${cid}/product/${pid}`, { method:'POST' });
        if (!r.ok) return alert('No se pudo agregar (revisá el CID y el producto)');
        alert('Agregado!');
      });
    });

    state.page = data.page || 1;
    pageLabel.textContent = `Página ${data.page ?? 1} de ${data.totalPages ?? 1}`;
    prev.disabled = !data.hasPrevPage;
    next.disabled = !data.hasNextPage;
  }

  prev.onclick = () => { state.page = (state.page||1) - 1; load(); }
  next.onclick = () => { state.page = (state.page||1) + 1; load(); }
  load();
</script>
